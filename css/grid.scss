---
---

@charset "utf-8";

@import 'variaveis';

* {
	margin: 0;
	padding: 0;
	border: none;
	box-sizing: border-box;
	overflow-x: hidden;
}

.wrapper {

	width: 100%;
	display: flex;
	flex-flow: row wrap;
	justify-content: flex-start;
	align-items: flex-start;
	align-content: flex-start;

	@for $i from 1 through $subgrid {
		.subwrapper-#{$i} {

			$subcol: 100%/$i;

			display: flex;
			flex-flow: row wrap;
			justify-content: flex-start;
			align-items: flex-start;
			align-content: flex-start;
			margin-left: - $defaultGutter / 2;
			margin-right: - $defaultGutter / 2;
			width: calc(100% + #{$defaultGutter});

			> * {
				margin-left: $defaultGutter/2;
				margin-right: $defaultGutter/2;
			}

			@for $j from 1 through $subgrid {
				@if $j == $i {
					.subcol-#{$j} {
						width: $subcol*$j;
						margin-left: $defaultGutter / 2;
						margin-right: $defaultGutter / 2;
					}
				}
				@if $j < $i {
					.subcol-#{$j} {
						width: calc(#{$subcol*$j} - #{$defaultGutter});
						margin-left: $defaultGutter / 2;
						margin-right: $defaultGutter / 2;
					}
				}
			}

			@for $j from 1 through $subgrid {
				@if $j < $i {
					.subcol-left-#{$j} {
						margin-left: calc(#{$j*$subcol} + #{$defaultGutter/2});
					}
					.subcol-right-#{$j} { 
						margin-right: calc(#{$j*$subcol} + #{$defaultGutter/2});
					}
				}
			}
		}
	}

	@media #{$phone} {

		padding-left: $phonePadding;
		padding-right: $phonePadding;

		> .phone-0 { display: none; }

		@for $i from 1 through $phoneGrid {
			$k : $phoneGrid - $i + 1;
			$subcol: 100%/$k;
			//.phone-#{$k}:not(.subwrapper) {

			.phone-#{$k} {

				width: calc(#{$phoneColumn*$k} - #{$phoneGutter}) ;
				margin-left: $phoneGutter / 2;
				margin-right: $phoneGutter / 2;

				.subwrapper {

					display: flex;
					flex-flow: row wrap;
					justify-content: flex-start;
					align-items: flex-start;
					align-content: flex-start;
					margin-left: - $phoneGutter / 2;
					margin-right: - $phoneGutter / 2;
					width: calc(100% + #{$phoneGutter});

					> * {
						margin-left: $phoneGutter/2;
						margin-right: $phoneGutter/2;
					}

					> .phone-0 { 
						display: none; 
					}

					@for $j from 1 through $phoneGrid {
						@if $j == $k {
							.phone-#{$j} {
								width: calc(#{$subcol*$j} - #{$phoneGutter});
								margin-left: $phoneGutter / 2;
								margin-right: $phoneGutter / 2;
							}
						}
						@if $j < $k {
							.phone-#{$j} {
								width: calc(#{$subcol*$j} - #{$phoneGutter});
								margin-left: $phoneGutter / 2;
								margin-right: $phoneGutter / 2;
							}
						}
					}

					@for $j from 1 through $phoneGrid {
						@if $j < $k {
							.phone-left-#{$j} {
								margin-left: calc(#{$j*$subcol} + #{$phoneGutter/2});
							}
							.phone-right-#{$j} { 
								margin-right: calc(#{$j*$subcol} + #{$phoneGutter/2});
							}
						}
					}

					&.justify-phone {
						flex-wrap: nowrap;
					    justify-content: space-between;
					}

					@for $i from 1 through $subgrid {
						.phone-sub-#{$i} {

							$subcol: 100%/$i;

							display: flex;
							flex-flow: row wrap;
							justify-content: flex-start;
							align-items: flex-start;
							align-content: flex-start;
							margin-left: - $phoneGutter / 2;
							margin-right: - $phoneGutter / 2;
							width: calc(100% + #{$phoneGutter});

							> .phone-0 { display: none; }

							@for $j from 1 through $subgrid {
								@if $j == $i {
									.phone-#{$j} {
										width: $subcol*$j;
										margin-left: $phoneGutter / 2;
										margin-right: $phoneGutter / 2;
									}
								}
								@if $j < $i {
									.phone-#{$j} {
										width: calc(#{$subcol*$j} - #{$phoneGutter});
										margin-left: $phoneGutter / 2;
										margin-right: $phoneGutter / 2;
									}
								}
							}

							@for $j from 1 through $subgrid {
								@if $j < $i {
									.phone-left-#{$j} {
										margin-left: calc(#{$j*$subcol} + #{$phoneGutter/2});
									}
									.phone-right-#{$j} { 
										margin-right: calc(#{$j*$subcol} + #{$phoneGutter/2});
									}
								}
							}

							&.justify-phone {
								flex-wrap: nowrap;
							    justify-content: space-between;
							}

						}
					}

				}
			}
		}

		@for $i from 1 through $phoneGrid - 1 {
			.phone-left-#{$i} { 
				margin-left: calc(#{$i*$phoneColumn} + #{$phoneGutter / 2});
				&.wrapper {
					margin-left: $i*$phoneColumn;
				}
			}
			.phone-right-#{$i} { 
				margin-right: calc(#{$i*$phoneColumn} + #{$phoneGutter / 2});
				&.wrapper {
					margin-right: $i*$phoneColumn;
				}
			}
		}

		@for $i from 1 through $subgrid {
			.phone-sub-#{$i} {

				$subcol: 100%/$i;

				display: flex;
				flex-flow: row wrap;
				justify-content: flex-start;
				align-items: flex-start;
				align-content: flex-start;
				margin-left: - $phoneGutter / 2;
				margin-right: - $phoneGutter / 2;
				width: calc(100% + #{$phoneGutter});

				> .phone-0 { display: none; }

				@for $j from 1 through $subgrid {
					@if $j == $i {
						.phone-#{$j} {
							width: $subcol*$j;
							margin-left: $phoneGutter / 2;
							margin-right: $phoneGutter / 2;
						}
					}
					@if $j < $i {
						.phone-#{$j} {
							width: calc(#{$subcol*$j} - #{$phoneGutter});
							margin-left: $phoneGutter / 2;
							margin-right: $phoneGutter / 2;
						}
					}
				}

				@for $j from 1 through $subgrid {
					@if $j < $i {
						.phone-left-#{$j} {
							margin-left: calc(#{$j*$subcol} + #{$phoneGutter/2});
						}
						.phone-right-#{$j} { 
							margin-right: calc(#{$j*$subcol} + #{$phoneGutter/2});
						}
					}
				}

				&.justify-phone {
					flex-wrap: nowrap;
				    justify-content: space-between;
				}

			}
		}

		&.justify-phone {
			flex-wrap: nowrap;
		    justify-content: space-between;
		}

	}

	@media #{$mobile} { 
		> .mobile-0 { 
			display: none; 
		}
	}

	@media #{$tabletUp} {

		padding-left: calc(#{$tabletPadding} - #{$tabletGutter / 2});
		padding-right: calc(#{$tabletPadding} - #{$tabletGutter / 2});

		> .tablet-0 { display: none; }

		@for $i from 1 through $tabletGrid {
			$k : $tabletGrid - $i + 1;
			$subcol: 100%/$k;
			//.desktop-#{$k}:not(.subwrapper) {

			.tablet-#{$k} {

				width: calc(#{$tabletColumn*$k} - #{$tabletGutter}) ;
				margin-left: $tabletGutter / 2;
				margin-right: $tabletGutter / 2;

				.subwrapper {

					display: flex;
					flex-flow: row wrap;
					justify-content: flex-start;
					align-items: flex-start;
					align-content: flex-start;
					margin-left: - $tabletGutter / 2;
					margin-right: - $tabletGutter / 2;
					width: calc(100% + #{$tabletGutter});

					> * {
						margin-left: $tabletGutter/2;
						margin-right: $tabletGutter/2;
					}

					> .tablet-0 { display: none; }

					@for $j from 1 through $tabletGrid {
						@if $j == $k {
							.tablet-#{$j} {
								width: calc(#{$subcol*$j} - #{$tabletGutter});
								margin-left: $tabletGutter / 2;
								margin-right: $tabletGutter / 2;
							}
						}
						@if $j < $k {
							.tablet-#{$j} {
								width: calc(#{$subcol*$j} - #{$tabletGutter});
								margin-left: $tabletGutter / 2;
								margin-right: $tabletGutter / 2;
							}
						}
					}

					@for $j from 1 through $tabletGrid {
						@if $j < $k {
							.tablet-left-#{$j} {
								margin-left: calc(#{$j*$subcol} + #{$tabletGutter/2});
							}
							.tablet-right-#{$j} { 
								margin-right: calc(#{$j*$subcol} + #{$tabletGutter/2});
							}
						}
					}

					&.justify-tablet {
						flex-wrap: nowrap;
					    justify-content: space-between;
					}

					@for $i from 1 through $subgrid {
						.tablet-sub-#{$i} {

							$subcol: 100%/$i;

							display: flex;
							flex-flow: row wrap;
							justify-content: flex-start;
							align-items: flex-start;
							align-content: flex-start;
							margin-left: - $tabletGutter / 2;
							margin-right: - $tabletGutter / 2;
							width: calc(100% + #{$tabletGutter});

							> .tablet-0 { display: none; }

							@for $j from 1 through $subgrid {
								@if $j == $i {
									.tablet-#{$j} {
										width: $subcol*$j;
										margin-left: $tabletGutter / 2;
										margin-right: $tabletGutter / 2;
									}
								}
								@if $j < $i {
									.tablet-#{$j} {
										width: calc(#{$subcol*$j} - #{$tabletGutter});
										margin-left: $tabletGutter / 2;
										margin-right: $tabletGutter / 2;
									}
								}
							}

							@for $j from 1 through $subgrid {
								@if $j < $i {
									.tablet-left-#{$j} {
										margin-left: calc(#{$j*$subcol} + #{$tabletGutter/2});
									}
									.tablet-right-#{$j} { 
										margin-right: calc(#{$j*$subcol} + #{$tabletGutter/2});
									}
								}
							}

							&.justify-tablet {
								flex-wrap: nowrap;
							    justify-content: space-between;
							}

						}
					}

				}
			}
		}

		@for $i from 1 through $tabletGrid - 1 {
			.tablet-left-#{$i} { 
				margin-left: calc(#{$i*$tabletColumn} + #{$tabletGutter / 2});
				&.wrapper {
					margin-left: $i*$tabletColumn;
				}
			}
			.tablet-right-#{$i} { 
				margin-right: calc(#{$i*$tabletColumn} + #{$tabletGutter / 2});
				&.wrapper {
					margin-right: $i*$tabletColumn;
				}
			}
		}

		@for $i from 1 through $subgrid {
			.tablet-sub-#{$i} {

				$subcol: 100%/$i;

				display: flex;
				flex-flow: row wrap;
				justify-content: flex-start;
				align-items: flex-start;
				align-content: flex-start;
				margin-left: - $tabletGutter / 2;
				margin-right: - $tabletGutter / 2;
				width: calc(100% + #{$tabletGutter});

				> .tablet-0 { display: none; }

				@for $j from 1 through $subgrid {
					@if $j == $i {
						.tablet-#{$j} {
							width: $subcol*$j;
							margin-left: $tabletGutter / 2;
							margin-right: $tabletGutter / 2;
						}
					}
					@if $j < $i {
						.tablet-#{$j} {
							width: calc(#{$subcol*$j} - #{$tabletGutter});
							margin-left: $tabletGutter / 2;
							margin-right: $tabletGutter / 2;
						}
					}
				}

				@for $j from 1 through $subgrid {
					@if $j < $i {
						.tablet-left-#{$j} {
							margin-left: calc(#{$j*$subcol} + #{$tabletGutter/2});
						}
						.tablet-right-#{$j} { 
							margin-right: calc(#{$j*$subcol} + #{$tabletGutter/2});
						}
					}
				}

				&.justify-tablet {
					flex-wrap: nowrap;
				    justify-content: space-between;
				}

			}
		}

		&.justify-tablet {
			flex-wrap: nowrap;
		    justify-content: space-between;
		}

	}

	@media #{$desktopUp} {

		padding-left: calc(#{$desktopPadding} - #{$desktopGutter / 2});
		padding-right: calc(#{$desktopPadding} - #{$desktopGutter / 2});

		> .desktop-0 { display: none; }

		@for $i from 1 through $desktopGrid {
			$k : $desktopGrid - $i + 1;
			$subcol: 100%/$k;
			//.desktop-#{$k}:not(.subwrapper) {

			.desktop-#{$k} {

				width: calc(#{$desktopColumn*$k} - #{$desktopGutter}) ;
				margin-left: $desktopGutter / 2;
				margin-right: $desktopGutter / 2;

				.subwrapper {

					display: flex;
					flex-flow: row wrap;
					justify-content: flex-start;
					align-items: flex-start;
					align-content: flex-start;
					margin-left: - $desktopGutter / 2;
					margin-right: - $desktopGutter / 2;
					width: calc(100% + #{$desktopGutter});

					> * {
						margin-left: $desktopGutter/2;
						margin-right: $desktopGutter/2;
					}

					> .desktop-0 { display: none; }

					@for $j from 1 through $desktopGrid {
						@if $j == $k {
							.desktop-#{$j} {
								width: calc(#{$subcol*$j} - #{$desktopGutter});
								margin-left: $desktopGutter / 2;
								margin-right: $desktopGutter / 2;
							}
						}
						@if $j < $k {
							.desktop-#{$j} {
								width: calc(#{$subcol*$j} - #{$desktopGutter});
								margin-left: $desktopGutter / 2;
								margin-right: $desktopGutter / 2;
							}
						}
					}

					@for $j from 1 through $desktopGrid {
						@if $j < $k {
							.desktop-left-#{$j} {
								margin-left: calc(#{$j*$subcol} + #{$desktopGutter/2});
							}
							.desktop-right-#{$j} { 
								margin-right: calc(#{$j*$subcol} + #{$desktopGutter/2});
							}
						}
					}

					&.justify-desktop {
						flex-wrap: nowrap;
					    justify-content: space-between;
					}

				}

				@for $i from 1 through $subgrid {
					.desktop-sub-#{$i} {

						$subcol: 100%/$i;

						display: flex;
						flex-flow: row wrap;
						justify-content: flex-start;
						align-items: flex-start;
						align-content: flex-start;
						margin-left: - $desktopGutter / 2;
						margin-right: - $desktopGutter / 2;
						width: calc(100% + #{$desktopGutter});

						> .desktop-0 { display: none; }

						@for $j from 1 through $subgrid {
							@if $j == $i {
								.desktop-#{$j} {
									width: $subcol*$j;
									margin-left: $desktopGutter / 2;
									margin-right: $desktopGutter / 2;
								}
							}
							@if $j < $i {
								.desktop-#{$j} {
									width: calc(#{$subcol*$j} - #{$desktopGutter});
									margin-left: $desktopGutter / 2;
									margin-right: $desktopGutter / 2;
								}
							}
						}

						@for $j from 1 through $subgrid {
							@if $j < $i {
								.desktop-left-#{$j} {
									margin-left: calc(#{$j*$subcol} + #{$desktopGutter/2});
								}
								.desktop-right-#{$j} { 
									margin-right: calc(#{$j*$subcol} + #{$desktopGutter/2});
								}
							}
						}

						&.justify-desktop {
							flex-wrap: nowrap;
						    justify-content: space-between;
						}

					}
				}
			}
		}

		@for $i from 1 through $desktopGrid - 1 {
			.desktop-left-#{$i} { 
				margin-left: calc(#{$i*$desktopColumn} + #{$desktopGutter / 2});
				&.wrapper {
					margin-left: $i*$desktopColumn;
				}
			}
			.desktop-right-#{$i} { 
				margin-right: calc(#{$i*$desktopColumn} + #{$desktopGutter / 2});
				&.wrapper {
					margin-right: $i*$desktopColumn;
				}
			}
		}

		@for $i from 1 through $subgrid {
			.desktop-sub-#{$i} {

				$subcol: 100%/$i;

				display: flex;
				flex-flow: row wrap;
				justify-content: flex-start;
				align-items: flex-start;
				align-content: flex-start;
				margin-left: - $desktopGutter / 2;
				margin-right: - $desktopGutter / 2;
				width: calc(100% + #{$desktopGutter});

				> .desktop-0 { display: none; }

				@for $j from 1 through $subgrid {
					@if $j == $i {
						.desktop-#{$j} {
							width: $subcol*$j;
							margin-left: $desktopGutter / 2;
							margin-right: $desktopGutter / 2;
						}
					}
					@if $j < $i {
						.desktop-#{$j} {
							width: calc(#{$subcol*$j} - #{$desktopGutter});
							margin-left: $desktopGutter / 2;
							margin-right: $desktopGutter / 2;
						}
					}
				}

				@for $j from 1 through $subgrid {
					@if $j < $i {
						.desktop-left-#{$j} {
							margin-left: calc(#{$j*$subcol} + #{$desktopGutter/2});
						}
						.desktop-right-#{$j} { 
							margin-right: calc(#{$j*$subcol} + #{$desktopGutter/2});
						}
					}
				}

				&.justify-desktop {
					flex-wrap: nowrap;
				    justify-content: space-between;
				}

			}
		}

		&.justify-desktop {
			flex-wrap: nowrap;
		    justify-content: space-between;
		}

	}

	@media #{$largeUp} {

		padding-left: calc(#{$largePadding} - #{$largeGutter / 2});
		padding-right: calc(#{$largePadding} - #{$largeGutter / 2});

		> .large-0 { display: none; }

		@for $i from 1 through $largeGrid {
			$k : $largeGrid - $i + 1;
			$subcol: 100%/$k;
			//.desktop-#{$k}:not(.subwrapper) {

			.large-#{$k} {

				width: calc(#{$largeColumn*$k} - #{$largeGutter}) ;
				margin-left: $largeGutter / 2;
				margin-right: $largeGutter / 2;

				.subwrapper {

					display: flex;
					flex-flow: row wrap;
					justify-content: flex-start;
					align-items: flex-start;
					align-content: flex-start;
					margin-left: - $largeGutter / 2;
					margin-right: - $largeGutter / 2;
					width: calc(100% + #{$largeGutter});

					> * {
						margin-left: $largeGutter/2;
						margin-right: $largeGutter/2;
					}

					> .large-0 { display: none; }

					@for $j from 1 through $largeGrid {
						@if $j == $k {
							.large-#{$j} {
								width: calc(#{$subcol*$j} - #{$largeGutter});
								margin-left: $largeGutter / 2;
								margin-right: $largeGutter / 2;
							}
						}
						@if $j < $k {
							.large-#{$j} {
								width: calc(#{$subcol*$j} - #{$largeGutter});
								margin-left: $largeGutter / 2;
								margin-right: $largeGutter / 2;
							}
						}
					}

					@for $j from 1 through $largeGrid {
						@if $j < $k {
							.large-left-#{$j} {
								margin-left: calc(#{$j*$subcol} + #{$largeGutter/2});
							}
							.large-right-#{$j} { 
								margin-right: calc(#{$j*$subcol} + #{$largeGutter/2});
							}
						}
					}

					&.justify-large {
						flex-wrap: nowrap;
					    justify-content: space-between;
					}

				}

				@for $i from 1 through $subgrid {
					.large-sub-#{$i} {

						$subcol: 100%/$i;

						display: flex;
						flex-flow: row wrap;
						justify-content: flex-start;
						align-items: flex-start;
						align-content: flex-start;
						margin-left: - $largeGutter / 2;
						margin-right: - $largeGutter / 2;
						width: calc(100% + #{$largeGutter});

						> .large-0 { display: none; }

						@for $j from 1 through $subgrid {
							@if $j == $i {
								.large-#{$j} {
									width: $subcol*$j;
									margin-left: $largeGutter / 2;
									margin-right: $largeGutter / 2;
								}
							}
							@if $j < $i {
								.large-#{$j} {
									width: calc(#{$subcol*$j} - #{$largeGutter});
									margin-left: $largeGutter / 2;
									margin-right: $largeGutter / 2;
								}
							}
						}

						@for $j from 1 through $subgrid {
							@if $j < $i {
								.large-left-#{$j} {
									margin-left: calc(#{$j*$subcol} + #{$largeGutter/2});
								}
								.large-right-#{$j} { 
									margin-right: calc(#{$j*$subcol} + #{$largeGutter/2});
								}
							}
						}

						&.justify-large {
							flex-wrap: nowrap;
						    justify-content: space-between;
						}

					}
				}

			}
		}

		@for $i from 1 through $largeGrid - 1 {
			.large-left-#{$i} { 
				margin-left: calc(#{$i*$largeColumn} + #{$largeGutter / 2});
				&.wrapper {
					margin-left: $i*$largeColumn;
				}
			}
			.large-right-#{$i} { 
				margin-right: calc(#{$i*$largeColumn} + #{$largeGutter / 2});
				&.wrapper {
					margin-right: $i*$largeColumn;
				}
			}
		}

		@for $i from 1 through $subgrid {
			.large-sub-#{$i} {

				$subcol: 100%/$i;

				display: flex;
				flex-flow: row wrap;
				justify-content: flex-start;
				align-items: flex-start;
				align-content: flex-start;
				margin-left: - $largeGutter / 2;
				margin-right: - $largeGutter / 2;
				width: calc(100% + #{$largeGutter});

				> .large-0 { display: none; }

				@for $j from 1 through $subgrid {
					@if $j == $i {
						.large-#{$j} {
							width: $subcol*$j;
							margin-left: $largeGutter / 2;
							margin-right: $largeGutter / 2;
						}
					}
					@if $j < $i {
						.large-#{$j} {
							width: calc(#{$subcol*$j} - #{$largeGutter});
							margin-left: $largeGutter / 2;
							margin-right: $largeGutter / 2;
						}
					}
				}

				@for $j from 1 through $subgrid {
					@if $j < $i {
						.large-left-#{$j} {
							margin-left: calc(#{$j*$subcol} + #{$largeGutter/2});
						}
						.large-right-#{$j} { 
							margin-right: calc(#{$j*$subcol} + #{$largeGutter/2});
						}
					}
				}

				&.justify-large {
					flex-wrap: nowrap;
				    justify-content: space-between;
				}

			}
		}

	}

	&.justify-large {
		flex-wrap: nowrap;
	    justify-content: space-between;
	}

}

#grid {
	position: relative;
	z-index: 999;
	&.open {
		.wrapper {
			opacity: 1;
			height: 100vh;
			width: 100%;
			transition: opacity .1s ease-in-out, width 0s ease-in-out 0s, height 0s ease-in-out 0s; 
		}
	}
	svg {
		position: fixed;
		bottom: 0;
		left: 0;
		height: 72px;
		width: 72px;
		#grid-button {
			fill: rgba(226, 22, 105, 0.15);
			cursor: pointer;
			transition: fill .15s ease-in-out;
			&:hover {
				fill: rgba(226, 22, 105, 0.5);
			}
		}
		text {
			fill: #fff;
			pointer-events: none;
		}
	}
	.wrapper {
		pointer-events: none;
		box-shadow: 0 0 0 1px rgba(226, 22, 105, 0.5);
		position: fixed;
		height: 0;
		width: 0;
		bottom: 0;
		left: 0;
		overflow: hidden;
		background-color: transparent;
		padding-top: 0;
		padding-bottom: 0;
		opacity: 0;
		transition: opacity .1s ease-in-out, width 0s ease-in-out .1s, height 0s ease-in-out .1s; 
		.column {
			height: 100%;
			background-color: transparent;
			margin-top: 0;
			margin-bottom: 0;
			background: linear-gradient( to left bottom, rgba(226, 22, 105, 0.1), rgba(226, 22, 105, 0.05));
		}
	}
}

@media #{$phone} { .phone-0 { display: none; } }
@media #{$mobile} { .mobile-0 { display: none; } }
@media #{$tabletUp} { .tablet-0 { display: none; } }
@media #{$desktopUp} { .desktop-0 { display: none; } }
@media #{$largeUp} { .large-0 { display: none; } }